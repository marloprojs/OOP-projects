-35 days, 34 nights

NEED TO DO:

Each time a customer comes into the store, a rental record is created that will keep track of what cars
they rented and how many nights they will keep the cars. A customer rents their cars and returns them
all at the same time. They will NOT, for example, rent three cars and then return one after 2 days, the
second after 5 days, and the third after 7 days. They will instead return all the cars they rented at the
same specified time. That means that a customer will never be late in returning their cars.




Also, for each car a customer rents, they will randomly add options to the rental. They will only add zero
or one GPS, zero or one satellite radio, but they may add from 0 to 4 child car seats. For example, they
may rent Luxury Car 3 (license LUX246) and then randomly decide to add a GPS and three child car
seats


Finally, a customer pays up front for their rental. If, for example, a customer rents three cars for three
nights at a price of $30 per night, they will pay the store $270 dollars before they leave the store with
their three rental cars. If they decide to add any options to the cars, that cost will be added to the rental
fee appropriately




The program should print the following information (which you should capture to a text output
file):
• At the beginning of each day, print the following (in a concise format):
• Day number
• A count and list of all completed rentals including which cars and options were
rented by which customer, for how many days, along with the total fee for that
rental
• A count and list of all active rentals, including which cars are rented by which
customer, and the license plates of those cars
• A count and list of all cars left in the store and their license plates
• The amount of money the store made that day
• At the end of the simulation, print (in a concise format):
• The total number of completed rentals (including any rentals that occurred on
the 35th day), overall and by type of customer (casual, business, regular)
• The total money the store made for the 35 day period



//Lets make an outputFile Class
// Within it will have sub day classes which will store the results below.
//The output folder top class should keep track of end results
	//Total Cars rented adding each day
	//Type of cars rented each day  //IDK we need this tbh
	//Type of customers renteing
	//Total Revenue








Example:


First Part --------------------
+++++++++++++++++++ Day 1 Results +++++++++++++++++++
Total Cars Today: #
Cars Rented Today
-------------End of First Part

carRentalInfo.add(newSummary) ------------------------- ArrayList
	Car 1:
		Customer Name
	 	License
		Type
		Rent Time
		Features Included[]
	Car 2:[]
		Customer Name
		License
		Type
		Features Included[]
carRentalInfo.add(newSummary) ----------------------------

newActiveSummary ----------------------------------------
Active Rentals:
	Customer Name
		Car1 Licence
		car2 Licene
	Car 1:
		Customer name
		License Plate
newActiveSummary -----------------------------------

Remaing Cars #:
	Car 1:
		License

Money Earned Today:

.....
+++++++++++++++++++ End Results +++++++++++++++++++
Total rented cars:
Customers Casual rented :
Customers Business Rented
Customers Regular Rented

Total Money Earned:
